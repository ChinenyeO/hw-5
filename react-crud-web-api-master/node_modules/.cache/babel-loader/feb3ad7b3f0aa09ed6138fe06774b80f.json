{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chine\\\\OneDrive\\\\Desktop\\\\hw 5\\\\react-crud-web-api-master\\\\src\\\\components\\\\tutorial.component.js\";\nimport React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\nexport default class Tutorial extends Component {\n  constructor(props) {\n    super(props);\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeDescription = this.onChangeDescription.bind(this);\n    this.getTutorial = this.getTutorial.bind(this);\n    this.updatePublished = this.updatePublished.bind(this);\n    this.updateTutorial = this.updateTutorial.bind(this);\n    this.deleteTutorial = this.deleteTutorial.bind(this);\n    this.state = {\n      currentTutorial: {\n        id: null,\n        title: \"\",\n        description: \"\",\n        published: false\n      },\n      message: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.getTutorial(this.props.match.params.id);\n  }\n\n  onChangeTitle(e) {\n    const title = e.target.value;\n    this.setState(function (prevState) {\n      return {\n        currentTutorial: { ...prevState.currentTutorial,\n          title: title\n        }\n      };\n    });\n  }\n\n  onChangeDescription(e) {\n    const description = e.target.value;\n    this.setState(prevState => ({\n      currentTutorial: { ...prevState.currentTutorial,\n        description: description\n      }\n    }));\n  }\n\n  getTutorial(id) {\n    TutorialDataService.get(id).then(response => {\n      this.setState({\n        currentTutorial: response.data\n      });\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  updatePublished(status) {\n    var data = {\n      id: this.state.currentTutorial.id,\n      title: this.state.currentTutorial.title,\n      description: this.state.currentTutorial.description,\n      published: status\n    };\n    TutorialDataService.update(this.state.currentTutorial.id, data).then(response => {\n      this.setState(prevState => ({\n        currentTutorial: { ...prevState.currentTutorial,\n          published: status\n        }\n      }));\n      console.log(response.data);\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  updateTutorial() {\n    TutorialDataService.update(this.state.currentTutorial.id, this.state.currentTutorial).then(response => {\n      console.log(response.data);\n      this.setState({\n        message: \"The tutorial was updated successfully!\"\n      });\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  deleteTutorial() {\n    TutorialDataService.delete(this.state.currentTutorial.id).then(response => {\n      console.log(response.data);\n      this.props.history.push('/tutorials');\n    }).catch(e => {\n      console.log(e);\n    });\n  }\n\n  render() {\n    const {\n      currentTutorial\n    } = this.state;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \" \", currentTutorial ? React.createElement(\"div\", {\n      className: \"edit-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \" Tutorial \"), \" \", React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \" Title \"), \" \", React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"title\",\n      value: currentTutorial.title,\n      onChange: this.onChangeTitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), \" \"), \" \", React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \" Description \"), \" \", React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      id: \"description\",\n      value: currentTutorial.description,\n      onChange: this.onChangeDescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), \" \"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, \" Status: \"), \" \"), \" \", currentTutorial.published ? \"Published\" : \"Pending\", \" \"), \" \"), currentTutorial.published ? React.createElement(\"button\", {\n      className: \"badge badge-primary mr-2\",\n      onClick: () => this.updatePublished(false),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"UnPublish \") : React.createElement(\"button\", {\n      className: \"badge badge-primary mr-2\",\n      onClick: () => this.updatePublished(true),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, \"Publish \"), React.createElement(\"button\", {\n      className: \"badge badge-danger mr-2\",\n      onClick: this.deleteTutorial,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, \"Delete \"), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"badge badge-success\",\n      onClick: this.updateTutorial,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, \"Update \"), \" \", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \" \", this.state.message, \" \"), \" \") : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \" Please click on a Tutorial... \"), \" \"), \" \");\n  }\n\n}","map":{"version":3,"sources":["C:/Users/chine/OneDrive/Desktop/hw 5/react-crud-web-api-master/src/components/tutorial.component.js"],"names":["React","Component","TutorialDataService","Tutorial","constructor","props","onChangeTitle","bind","onChangeDescription","getTutorial","updatePublished","updateTutorial","deleteTutorial","state","currentTutorial","id","title","description","published","message","componentDidMount","match","params","e","target","value","setState","prevState","get","then","response","data","console","log","catch","status","update","delete","history","push","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport TutorialDataService from \"../services/tutorial.service\";\n\nexport default class Tutorial extends Component {\n    constructor(props) {\n        super(props);\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeDescription = this.onChangeDescription.bind(this);\n        this.getTutorial = this.getTutorial.bind(this);\n        this.updatePublished = this.updatePublished.bind(this);\n        this.updateTutorial = this.updateTutorial.bind(this);\n        this.deleteTutorial = this.deleteTutorial.bind(this);\n\n        this.state = {\n            currentTutorial: {\n                id: null,\n                title: \"\",\n                description: \"\",\n                published: false\n            },\n            message: \"\"\n        };\n    }\n\n    componentDidMount() {\n        this.getTutorial(this.props.match.params.id);\n    }\n\n    onChangeTitle(e) {\n        const title = e.target.value;\n\n        this.setState(function(prevState) {\n            return {\n                currentTutorial: {\n                    ...prevState.currentTutorial,\n                    title: title\n                }\n            };\n        });\n    }\n\n    onChangeDescription(e) {\n        const description = e.target.value;\n\n        this.setState(prevState => ({\n            currentTutorial: {\n                ...prevState.currentTutorial,\n                description: description\n            }\n        }));\n    }\n\n    getTutorial(id) {\n        TutorialDataService.get(id)\n            .then(response => {\n                this.setState({\n                    currentTutorial: response.data\n                });\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    updatePublished(status) {\n        var data = {\n            id: this.state.currentTutorial.id,\n            title: this.state.currentTutorial.title,\n            description: this.state.currentTutorial.description,\n            published: status\n        };\n\n        TutorialDataService.update(this.state.currentTutorial.id, data)\n            .then(response => {\n                this.setState(prevState => ({\n                    currentTutorial: {\n                        ...prevState.currentTutorial,\n                        published: status\n                    }\n                }));\n                console.log(response.data);\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    updateTutorial() {\n        TutorialDataService.update(\n                this.state.currentTutorial.id,\n                this.state.currentTutorial\n            )\n            .then(response => {\n                console.log(response.data);\n                this.setState({\n                    message: \"The tutorial was updated successfully!\"\n                });\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    deleteTutorial() {\n        TutorialDataService.delete(this.state.currentTutorial.id)\n            .then(response => {\n                console.log(response.data);\n                this.props.history.push('/tutorials')\n            })\n            .catch(e => {\n                console.log(e);\n            });\n    }\n\n    render() {\n        const { currentTutorial } = this.state;\n\n        return ( <\n            div > {\n                currentTutorial ? ( <\n                    div className = \"edit-form\" >\n                    <\n                    h4 > Tutorial < /h4> <\n                    form >\n                    <\n                    div className = \"form-group\" >\n                    <\n                    label htmlFor = \"title\" > Title < /label> <\n                    input type = \"text\"\n                    className = \"form-control\"\n                    id = \"title\"\n                    value = { currentTutorial.title }\n                    onChange = { this.onChangeTitle }\n                    /> <\n                    /div> <\n                    div className = \"form-group\" >\n                    <\n                    label htmlFor = \"description\" > Description < /label> <\n                    input type = \"text\"\n                    className = \"form-control\"\n                    id = \"description\"\n                    value = { currentTutorial.description }\n                    onChange = { this.onChangeDescription }\n                    /> <\n                    /div>\n\n                    <\n                    div className = \"form-group\" >\n                    <\n                    label >\n                    <\n                    strong > Status: < /strong> <\n                    /label> { currentTutorial.published ? \"Published\" : \"Pending\" } <\n                    /div> <\n                    /form>\n\n                    {\n                        currentTutorial.published ? ( <\n                            button className = \"badge badge-primary mr-2\"\n                            onClick = {\n                                () => this.updatePublished(false) } >\n                            UnPublish <\n                            /button>\n                        ) : ( <\n                            button className = \"badge badge-primary mr-2\"\n                            onClick = {\n                                () => this.updatePublished(true) } >\n                            Publish <\n                            /button>\n                        )\n                    }\n\n                    <\n                    button className = \"badge badge-danger mr-2\"\n                    onClick = { this.deleteTutorial } >\n                    Delete <\n                    /button>\n\n                    <\n                    button type = \"submit\"\n                    className = \"badge badge-success\"\n                    onClick = { this.updateTutorial } >\n                    Update <\n                    /button> <\n                    p > { this.state.message } < /p> <\n                    /div>\n                ) : ( <\n                    div >\n                    <\n                    br / >\n                    <\n                    p > Please click on a Tutorial... < /p> <\n                    /div>\n                )\n            } <\n            /div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}